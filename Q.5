#include <stdio.h>
#include <stdbool.h>

#define MAX_SIZE 100

void backtrack(int arr[], int n, int sum, int target, int current_sum, int current_index, bool found) {
    if (current_sum == target) {
        found = true;
        printf("Subset found: ");
        for (int i = 0; i < current_index; i++) {
            printf("%d ", arr[i]);
        }
        printf("\n");
        return;
    }

    if (current_sum > target || current_index == n) {
        return;
    }

    // Include current element in subset
    backtrack(arr, n, sum, target, current_sum + arr[current_index], current_index + 1, found);

    // Exclude current element from subset
    backtrack(arr, n, sum, target, current_sum, current_index + 1, found);
}

int main() {
    int arr[] = {6, 2, 8, 1, 5};
    int n = sizeof(arr) / sizeof(arr[0]);
    int target_sum = 9;

    bool found = false;
    backtrack(arr, n, 0, target_sum, 0, 0, found);

    if (!found) {
        printf("No subset found\n");
    }

    return 0;
}
